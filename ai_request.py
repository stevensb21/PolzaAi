import os
from openai import AsyncOpenAI

from dotenv import load_dotenv

from api_settings import API_CLIENTS

load_dotenv()


async def make_api_request_with_fallback(
    priority_list,           # –°–ø–∏—Å–æ–∫ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤
    messages,                # –°–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è API
    max_tokens=None,         # –ú–∞–∫—Å–∏–º—É–º —Ç–æ–∫–µ–Ω–æ–≤
    temperature=0.1,         # –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
    task_name="API –∑–∞–ø—Ä–æ—Å"  # –ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –¥–ª—è –ª–æ–≥–æ–≤
):
    """
    –ü—ã—Ç–∞–µ—Ç—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å, –ø–µ—Ä–µ–±–∏—Ä–∞—è –∫–ª–∏–µ–Ω—Ç—ã –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É
    
    Returns:
        tuple: (response, used_client, used_model) –∏–ª–∏ (None, None, None)
    """
    
    for client_name, model_type in priority_list:
        try:
            client_config = API_CLIENTS[client_name]
            client = client_config["client"]
            model = client_config["models"][model_type]
            
            if not client:
                print(f"‚ö†Ô∏è {task_name}: {client_name} –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
                continue
            
            print(f"üîÑ {task_name}: –ü—Ä–æ–±—É–µ–º {client_name} ({model})")
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è API (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            # health_ok = await check_api_health(client, model)
            # if not health_ok:
            #     print(f"‚ùå {task_name}: {client_name} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            #     continue
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
            response = await client.chat.completions.create(
                model=model,
                messages=messages,
                max_tokens=max_tokens,
                temperature=temperature
            )
            
            print(f"‚úÖ {task_name}: –£—Å–ø–µ—à–Ω–æ —á–µ—Ä–µ–∑ {client_name} ({model})")
            return response, client_name, model
            
        except Exception as e:
            print(f"‚ùå {task_name}: –û—à–∏–±–∫–∞ {client_name} - {e}")
            continue
    
    # –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å
    print(f"üí• {task_name}: –í–°–ï API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã!")
    return None, None, None