import os
from openai import AsyncOpenAI

from dotenv import load_dotenv


load_dotenv()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤
print(f"üîç POLZA_AI_TOKEN: {os.getenv('POLZA_AI_TOKEN')[:10]}..." if os.getenv('POLZA_AI_TOKEN') else "‚ùå POLZA_AI_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")

try:
    client_polza = AsyncOpenAI(
        base_url="https://api.polza.ai/api/v1",
        api_key=os.getenv("POLZA_AI_TOKEN")
    )
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Polza –∫–ª–∏–µ–Ω—Ç–∞: {e}")
    client_polza = None

try:
    client_vsegpt = AsyncOpenAI(
        base_url="https://api.vsegpt.ru/v1",
        api_key=os.getenv("VSEGPT_API_KEY")
    )
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Vsegpt –∫–ª–∏–µ–Ω—Ç–∞: {e}")
    client_vsegpt = None

try:
    client_proxyapi = AsyncOpenAI(
        base_url="https://api.proxyapi.ru/openai/v1",
        api_key=os.getenv("PROXYAPI_API_KEY")
    )
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Proxyapi –∫–ª–∏–µ–Ω—Ç–∞: {e}")
    client_proxyapi = None


# –ú–æ–¥–µ–ª–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
OPENAI_MODEL_POLZA_4_1 = os.getenv("OPENAI_MODEL_POLZA_4_1", "openai/gpt-4.1-mini")    
GEMINI_MODEL_POLZA_2_0 = os.getenv("GEMINI_MODEL_POLZA_2_0", "google/gemini-2.0-flash-lite-001")
OPENAI_MODEL_VSEGPT = os.getenv("OPENAI_MODEL_VSEGPT", "openai/gpt-4o-mini")
GEMINI_MODEL_VSEGPT = os.getenv("GEMINI_MODEL_VSEGPT", "google/gemini-2.0-flash")
OPENAI_MODEL_PROXYAPI = os.getenv("OPENAI_MODEL_PROXYAPI", "gpt-4o-mini")
GEMINI_MODEL_PROXYAPI = os.getenv("GEMINI_MODEL_PROXYAPI", "gemini-2.0-flash")

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –º–æ–¥–µ–ª–µ–π
API_CLIENTS = {
    "polza": {
        "client": client_polza,
        "base_url": "https://api.polza.ai/api/v1",
        "token_env": "POLZA_AI_TOKEN",
        "models": {
            "openai": OPENAI_MODEL_POLZA_4_1,
            "gemini": GEMINI_MODEL_POLZA_2_0
        }
    },
    "vsegpt": {
        "client": client_vsegpt,
        "base_url": "https://api.vsegpt.ru/v1",
        "token_env": "VSEGPT_API_KEY",
        "models": {
            "openai": OPENAI_MODEL_VSEGPT,
            "gemini": GEMINI_MODEL_VSEGPT
        }
    },
    "proxyapi": {
        "client": client_proxyapi,
        "base_url": "https://api.proxyapi.ru/openai/v1",
        "token_env": "PROXYAPI_API_KEY",
        "models": {
            "openai": OPENAI_MODEL_PROXYAPI,
            "gemini": GEMINI_MODEL_PROXYAPI
        }
    }
}



# –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –¥–ª—è check_if_protocol (–±—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)
PROTOCOL_CHECK_PRIORITY = [
    ("polza", "openai"),      # –ë—ã—Å—Ç—Ä–∞—è –∏ –¥–µ—à–µ–≤–∞—è
    ("proxyapi", "openai"), # –ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç 1
    ("vsegpt", "openai"),     # –ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç 2
    ("polza", "gemini"),      # –ï—Å–ª–∏ openai –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç
    ("proxyapi", "gemini"),
    ("vsegpt", "gemini")
]

# –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –¥–ª—è process_single_file (–¥–µ—Ç–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞)
PROCESS_FILE_PRIORITY = [
    ("polza", "gemini"),      # –õ—É—á—à–µ –¥–ª—è vision tasks
    ("proxyapi", "gemini"),     # –ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç 1
    ("vsegpt", "gemini"),   # –ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç 2
    ("polza", "openai"),      # –ï—Å–ª–∏ gemini –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç
    ("proxyapi", "openai"),
    ("vsegpt", "openai")
]

# –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –¥–ª—è convert_date (–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–∞—Ç—ã)
DATE_CONVERSION_PRIORITY = [
    ("polza", "openai"),      # –ü—Ä–æ—Å—Ç–∞—è –∑–∞–¥–∞—á–∞, –¥–µ—à–µ–≤–∞—è –º–æ–¥–µ–ª—å
    ("proxyapi", "openai"),
    ("vsegpt", "openai"),
    ("polza", "gemini"),
    ("proxyapi", "gemini"),
    ("vsegpt", "gemini")
]

# –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –¥–ª—è search_certificates (–ø–æ–∏—Å–∫ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤)
CERTIFICATE_SEARCH_PRIORITY = [
    ("polza", "openai"),      # –ù—É–∂–Ω–∞ —Ç–æ—á–Ω–æ—Å—Ç—å
    ("proxyapi", "openai"),      # –ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
    ("vsegpt", "openai"),
    ("polza", "gemini"),
    ("proxyapi", "gemini"),
    ("vsegpt", "gemini")
]

# –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –¥–ª—è makeOrderformat (—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞)
ORDER_FORMAT_PRIORITY = [
    ("polza", "openai"),      # –ù—É–∂–Ω–∞ —Ç–æ—á–Ω–æ—Å—Ç—å
    ("proxyapi", "openai"),      # –ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
    ("vsegpt", "openai"),
    ("polza", "gemini"),
    ("proxyapi", "gemini"),
    ("vsegpt", "gemini")
]