"""
–¢–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –æ—Ö—Ä–∞–Ω—ã —Ç—Ä—É–¥–∞
"""
from enum import Enum
from typing import Dict, Any, Optional
from dataclasses import dataclass
from datetime import datetime

class NotificationType(Enum):
    """–¢–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    # –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏
    EMPLOYEE_REGISTERED = "employee_registered"
    EMPLOYEE_UPDATED = "employee_updated"
    EMPLOYEE_STATUS_CHANGED = "employee_status_changed"
    
    # –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
    CERTIFICATE_EXPIRING = "certificate_expiring"
    CERTIFICATE_EXPIRED = "certificate_expired"
    CERTIFICATE_ASSIGNED = "certificate_assigned"
    CERTIFICATE_COMPLETED = "certificate_completed"
    
    # –ó–∞–¥–∞—á–∏
    TASK_ASSIGNED = "task_assigned"
    TASK_OVERDUE = "task_overdue"
    TASK_COMPLETED = "task_completed"
    
    # –°–∏—Å—Ç–µ–º–∞
    SYSTEM_MAINTENANCE = "system_maintenance"
    SYSTEM_ERROR = "system_error"
    DAILY_REPORT = "daily_report"

@dataclass
class NotificationTemplate:
    """–®–∞–±–ª–æ–Ω —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
    type: NotificationType
    title: str
    message_template: str
    priority: int = 1  # 1-–Ω–∏–∑–∫–∏–π, 2-—Å—Ä–µ–¥–Ω–∏–π, 3-–≤—ã—Å–æ–∫–∏–π, 4-–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π
    icon: str = "üì¢"
    requires_action: bool = False

# –®–∞–±–ª–æ–Ω—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
NOTIFICATION_TEMPLATES = {
    NotificationType.EMPLOYEE_REGISTERED: NotificationTemplate(
        type=NotificationType.EMPLOYEE_REGISTERED,
        title="–ù–æ–≤—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω",
        message_template="""
üéâ <b>–ù–æ–≤—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!</b>

üë§ <b>–§–ò–û:</b> {full_name}
üíº <b>–î–æ–ª–∂–Ω–æ—Å—Ç—å:</b> {position}
üìÑ <b>–°–ù–ò–õ–°:</b> {snils}
üî¢ <b>–ò–ù–ù:</b> {inn}
üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {phone}
üìÖ <b>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:</b> {birth_date}
üìä <b>–°—Ç–∞—Ç—É—Å:</b> {status}
üÜî <b>ID:</b> {employee_id}

üîó <a href="{search_url}">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ —Å–∏—Å—Ç–µ–º–µ –æ—Ö—Ä–∞–Ω—ã —Ç—Ä—É–¥–∞</a>
""",
        priority=2,
        icon="üéâ",
        requires_action=True
    ),
    
    NotificationType.EMPLOYEE_UPDATED: NotificationTemplate(
        type=NotificationType.EMPLOYEE_UPDATED,
        title="–î–∞–Ω–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã",
        message_template="""
‚úÖ <b>–°–æ—Ç—Ä—É–¥–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!</b>

üë§ <b>–§–ò–û:</b> {full_name}
üíº <b>–î–æ–ª–∂–Ω–æ—Å—Ç—å:</b> {position}
üìÑ <b>–°–ù–ò–õ–°:</b> {snils}
üî¢ <b>–ò–ù–ù:</b> {inn}
üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {phone}
üìÖ <b>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:</b> {birth_date}
üìä <b>–°—Ç–∞—Ç—É—Å:</b> {status}
üÜî <b>ID:</b> {employee_id}

üîó <a href="{search_url}">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ —Å–∏—Å—Ç–µ–º–µ –æ—Ö—Ä–∞–Ω—ã —Ç—Ä—É–¥–∞</a>
""",
        priority=2,
        icon="‚úÖ"
    ),
    
    NotificationType.CERTIFICATE_EXPIRING: NotificationTemplate(
        type=NotificationType.CERTIFICATE_EXPIRING,
        title="–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–∫–æ—Ä–æ –∏—Å—Ç–µ–∫–∞–µ—Ç",
        message_template="""
‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ! –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–∫–æ—Ä–æ –∏—Å—Ç–µ–∫–∞–µ—Ç</b>

üë§ <b>–°–æ—Ç—Ä—É–¥–Ω–∏–∫:</b> {employee_name}
üìú <b>–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç:</b> {certificate_name}
üìÖ <b>–ò—Å—Ç–µ–∫–∞–µ—Ç:</b> {expiry_date}
‚è∞ <b>–û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π:</b> {days_left}

üîó <a href="{employee_url}">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</a>
""",
        priority=3,
        icon="‚ö†Ô∏è",
        requires_action=True
    ),
    
    NotificationType.CERTIFICATE_EXPIRED: NotificationTemplate(
        type=NotificationType.CERTIFICATE_EXPIRED,
        title="–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏—Å—Ç–µ–∫!",
        message_template="""
üö® <b>–ö–†–ò–¢–ò–ß–ù–û! –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏—Å—Ç–µ–∫</b>

üë§ <b>–°–æ—Ç—Ä—É–¥–Ω–∏–∫:</b> {employee_name}
üìú <b>–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç:</b> {certificate_name}
üìÖ <b>–ò—Å—Ç–µ–∫:</b> {expiry_date}
‚è∞ <b>–ü—Ä–æ—Å—Ä–æ—á–µ–Ω –Ω–∞:</b> {days_overdue} –¥–Ω–µ–π

üîó <a href="{employee_url}">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞</a>
""",
        priority=4,
        icon="üö®",
        requires_action=True
    ),
    
    NotificationType.TASK_ASSIGNED: NotificationTemplate(
        type=NotificationType.TASK_ASSIGNED,
        title="–ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞",
        message_template="""
üìã <b>–í–∞–º –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞</b>

üè¢ <b>–ü—Ä–æ—Ü–µ—Å—Å:</b> {workflow_name}
üë§ <b>–°–æ—Ç—Ä—É–¥–Ω–∏–∫:</b> {employee_name}
üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {task_description}
üìÖ <b>–°—Ä–æ–∫:</b> {deadline}

üîó <a href="{task_url}">–ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–¥–∞—á–µ</a>
""",
        priority=2,
        icon="üìã",
        requires_action=True
    ),
    
    NotificationType.DAILY_REPORT: NotificationTemplate(
        type=NotificationType.DAILY_REPORT,
        title="–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç",
        message_template="""
üìä <b>–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç</b>

üìà <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {date}:</b>
‚Ä¢ –ù–æ–≤—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {new_employees}
‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {updated_employees}
‚Ä¢ –ò—Å—Ç–µ–∫–∞—é—â–∏—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤: {expiring_certificates}
‚Ä¢ –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤: {expired_certificates}
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á: {active_tasks}

üîó <a href="{report_url}">–ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç</a>
""",
        priority=1,
        icon="üìä"
    )
}

def get_template(notification_type: NotificationType) -> Optional[NotificationTemplate]:
    """–ü–æ–ª—É—á–∏—Ç—å —à–∞–±–ª–æ–Ω —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ —Ç–∏–ø—É"""
    return NOTIFICATION_TEMPLATES.get(notification_type)

def format_notification(template: NotificationTemplate, data: Dict[str, Any]) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ —à–∞–±–ª–æ–Ω—É"""
    try:
        return template.message_template.format(**data)
    except KeyError as e:
        return f"‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–µ {e}"
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}"
