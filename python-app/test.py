import os
import json
import asyncio
import requests
from openai import AsyncOpenAI

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ (–∫–∞–∫ –≤ –ø—Ä–æ–µ–∫—Ç–µ)
client = AsyncOpenAI(
    base_url="https://api.polza.ai/api/v1",
    api_key="ak_XfE3O425uoSp2I3xiLDJXmOX7xGLF3BZ1uXUImXxnpo"
)

# –ë–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç ‚Äî —Å—é–¥–∞ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å —Å–ø—Ä–∞–≤–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ/–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
CONTEXT = {
    "users": {
        "–ª–∞—Ä–∏—Å–∞": {
            "telegram_id": "8316311496",
            "alias": ["–ª–∞—Ä–∏—Å–∞", "–ª–∞—Ä–∏—Å–∞ –∏–∑ –æ—Ç–¥–µ–ª–∞", "–ª–∞—Ä–∏—Å–∞ –º–µ–Ω–µ–¥–∂–µ—Ä"],
        }
    },
    "endpoints": {
        "people_list": "http://80.87.193.89:8081/api/people",
        "people_data": "http://80.87.193.89:8001/data"
    },
    "instructions": [
        "–û—Ç–≤–µ—á–∞–π –ø–æ-—Ä—É—Å—Å–∫–∏.",
        "–ü–æ–º–Ω–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–∏–∞–ª–æ–≥–∞ –∏ —Ä–∞–Ω–µ–µ —É–ø–æ–º—è–Ω—É—Ç—ã–µ —Ñ–∞–∫—Ç—ã.",
        "–ï—Å–ª–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫ –≥–æ–≤–æ—Ä–∏—Ç –æ –õ–∞—Ä–∏—Å–µ, –∑–Ω–∞–π, —á—Ç–æ —ç—Ç–æ telegram-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id:8316311496.",
        "–ï—Å–ª–∏ –ø—Ä–æ—Å–∏—Ç —á—Ç–æ-—Ç–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∏–ª–∏ —É—Ç–æ—á–Ω–∏—Ç—å ‚Äî –¥–µ–ª–∞–π —ç—Ç–æ –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É.",
    ]
}

# –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ ‚Äî –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
chat_history = [
    {
        "role": "system",
        "content": (
            "–¢—ã ‚Äî –≤–µ–∂–ª–∏–≤—ã–π –∏ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –û–±—â–∞–π—Å—è –∫–∞–∫ —á–µ–ª–æ–≤–µ–∫, "+
            "–¥–µ—Ä–∂–∏ –∫—Ä–∞—Ç–∫–∏–π –∏ —Ç–æ—á–Ω—ã–π —Å—Ç–∏–ª—å. –£ —Ç–µ–±—è –µ—Å—Ç—å –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç: "
            + json.dumps(CONTEXT, ensure_ascii=False)
        ),
    }
]

async def send_to_ai(messages: list) -> str:
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –º–æ–¥–µ–ª—å –∏ –≤–æ–∑–≤—Ä–∞—Ç –æ—Ç–≤–µ—Ç–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞."""
    response = await client.chat.completions.create(
        model="openai/gpt-4.1-mini",
        messages=messages,
    )
    return response.choices[0].message.content or ""

async def main() -> None:
    print("–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π —á–∞—Ç –∑–∞–ø—É—â–µ–Ω. –ö–æ–º–∞–Ω–¥—ã: /reset ‚Äî –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é, /exit ‚Äî –≤—ã—Ö–æ–¥.")
    while True:
        user_input = input("üë§ –í—ã: ").strip()
        if not user_input:
            continue

        if user_input.lower() in ["/exit", "–≤—ã—Ö–æ–¥", "quit", "exit"]:
            print("–î–æ —Å–≤—è–∑–∏!")
            break

        if user_input.lower() in ["/reset", "reset"]:
            # –°–±—Ä–æ—Å –∏—Å—Ç–æ—Ä–∏–∏, –Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
             
            global chat_history
            chat_history = chat_history[:1]
            print("–ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞.")
            continue

        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        chat_history.append({"role": "user", "content": user_input})

        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –∏—Å—Ç–æ—Ä–∏–∏, —á—Ç–æ–±—ã –Ω–µ —Ä–∞–∑–¥—É–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å
        if len(chat_history) > 20:
            # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 19 —Å–æ–æ–±—â–µ–Ω–∏–π
            chat_history[:] = [chat_history[0]] + chat_history[-19:]

        try:
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏
            ai_text = await send_to_ai(chat_history)
            # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é
            chat_history.append({"role": "assistant", "content": ai_text})
            print("ü§ñ –ò–ò:\n" + ai_text)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(main())

